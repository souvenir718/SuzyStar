{"version":3,"sources":["Header/Header.js","Header/HeaderContainer.js","Footer/Footer.js","User/View/Login.js","User/Container/LoginContainer.js","SlideImages.js","ImageSlider/ImageSlide.js","Product/View/ProductList.js","Product/Container/ProductListContainer.js","Product/View/ProductModal.js","Product/Container/ProductModalContainer.js","Product/View/ProductItem.js","Product/Container/ProductItemContainer.js","Etc/Etc.js","MainPage/Main.js","Basket/Basket.js","Basket/BasketContainer.js","User/View/SignUp.js","User/Container/SignUpContainer.js","App.js","Product/Data/Products.js","Product/Store/ProductStore.js","User/Data/Users.js","User/Store/UserStore.js","MainPage/MainStore.js","index.js"],"names":["MenuExampleSecondaryPointing","setView","this","props","style","margin","Menu","pointing","secondary","fixed","backgroundColor","Item","position","Image","onClick","size","src","cursor","as","Icon","color","name","Component","HeaderContainer","inject","observer","view","user","UserStore","getUser","userId","alert","MainStore","setMainView","setGuest","Footer","id","Segment","inverted","vertical","padding","Container","Grid","divided","stackable","Row","Column","width","Header","content","List","link","Login","lgnBtn","setLgnProp","onCancel","onSignUp","centered","textAlign","height","verticalAlign","maxWidth","className","Form","stacked","Input","label","fluid","icon","iconPosition","placeholder","onChange","e","target","value","ButtonGroup","Button","floated","fontSize","LoginContainer","key","login","SlideImages","imgUrl","ImageSlide","imgChange","symbol","nextIndex","imgIndex","state","length","setState","Images","slideImages","alt","ProductList","dataList","list","map","data","idx","selectProduct","Content","animated","ProductListContainer","ProductStore","setSelectProducts","getList","ProductModal","useState","price","setPrice","open","onClose","product","onUpdate","onDelete","addBasket","Modal","image","wrapped","marginBottom","Description","pName","des","split","i","updatePrice","Actions","labelPosition","positive","ProductModalContainer","setClose","updateProduct","deleteProduct","getProduct","setBasket","getOpen","ProductItem","pageChange","activePage","pageNum","startNum","lastNum","products","onOpen","pNum","Math","ceil","Card","ui","Meta","property","getDataList","Group","itemsPerRow","Pagination","defaultActivePage","firstItem","lastItem","totalPages","onPageChange","ProductItemContainer","detail1","detailImgUrl1","detail2","detailImgUrl2","detail3","detailImgUrl3","setProduct","setOpen","getSelectProducts","Etc","columns","Reveal","visible","hidden","Main","Basket","baskets","find","basket","onBuy","BasketContainer","clearBasket","getProducts","SignUp","onAddUser","onSignUpProp","toLogin","Message","SignUpContainer","setSignUpProp","addSignUp","signUpUser","App","getMainView","paddingBottom","Products","selectProducts","filter","selectMenu","observable","computed","action","Users","pasd","loginUser","users","console","log","concat","tempUser","mainView","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76b15ea4.chunk.js","sourcesContent":["//HeaderView\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Menu, Icon, Image } from \"semantic-ui-react\";\r\n\r\nexport default class MenuExampleSecondaryPointing extends Component {\r\n  render() {\r\n    \r\n    //HeaderContainer에서 받은 setView함수\r\n    const {setView} = this.props;\r\n    return (\r\n      <header style={{ margin: \"70px 0px 0px 0px\" }}>\r\n        <Menu\r\n          pointing\r\n          secondary\r\n          fixed=\"top\"\r\n          style={{ backgroundColor: \"rgba(245, 240, 234, 0.5)\" }}\r\n        >\r\n          <Menu.Item position=\"right\">\r\n\r\n            {/* 로고를 눌렀을 경우 메인페이지로 이동하기 위해 \r\n            setView함수를 onClick으로 설정 */}\r\n            <Image\r\n            onClick={()=>setView(\"Home\")}\r\n              size=\"small\"\r\n              src=\"etc_image/logo.png\"\r\n              style={{ margin: \"10px 0px 10px 200px\", cursor:\"pointer\" }}\r\n            />\r\n          </Menu.Item>\r\n          {/* 로그인/카트/검색 */}\r\n          <Menu.Menu position=\"right\" style={{ margin: \"0px 10px 25px 30px\" }}>\r\n            <Menu.Item as=\"a\">\r\n\r\n            {/* 로그인 화면으로 이동하기 위해 onClick 설정 */}\r\n              <Icon\r\n                size=\"large\"\r\n                color=\"grey\"\r\n                name=\"user\"\r\n                onClick={()=>{\r\n                  setView(\"Login\")\r\n                }}\r\n              />\r\n            </Menu.Item>\r\n\r\n            <Menu.Item as=\"a\">\r\n\r\n              {/* 장바구니 화면으로 이동하기 위해 onClick 설정 */}\r\n              <Icon\r\n                size=\"large\"\r\n                color=\"grey\"\r\n                name=\"cart\"\r\n                onClick={()=>setView(\"Basket\")}\r\n              />\r\n            </Menu.Item>\r\n\r\n            <Menu.Item as=\"a\">\r\n              <Icon size=\"large\" color=\"grey\" name=\"search\" />\r\n            </Menu.Item>\r\n          </Menu.Menu>\r\n        </Menu>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","//Header에서 필요한 정보를 각 Store에서 불러와\r\n//Header에 props로 전달\r\n\r\nimport React, { Component } from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport Header from \"./Header\";\r\n\r\n@inject(\"MainStore\", \"UserStore\")\r\n@observer\r\nclass HeaderContainer extends Component {\r\n    //Header에 있는 각 버튼에 맞게\r\n    //화면전환을 해주는 함수\r\n    setView = (view)=>{\r\n        let user = this.props.UserStore.getUser;\r\n\r\n        //장바구니 버튼을 눌렀을 때\r\n        if(view === \"Basket\"){\r\n\r\n            //user가 로그인하지 않은 guest 상태일 때\r\n            if(user.userId === \"guest\"){\r\n                alert(\"회원만 이용 가능합니다.\");\r\n\r\n                //mainView를 Home으로 설정\r\n                this.props.MainStore.setMainView(\"Home\")\r\n            }\r\n            //user가 로그인했을 경우에는 해당 장바구니 페이지로 이동\r\n            else{\r\n                this.props.MainStore.setMainView(view);\r\n            }\r\n        }\r\n        //로그인 버튼을 눌렀을 때\r\n        else if(view === \"Login\"){\r\n\r\n            //user가 guest일 경우\r\n            if(user.userId === \"guest\"){\r\n\r\n                //로그인 페이지로 이동\r\n                this.props.MainStore.setMainView(view);\r\n            }\r\n            //user가 로그인 되어있을 경우\r\n            else{\r\n                alert(\"로그아웃 되었습니다.\")\r\n                //UserStore에 user를 guest로 초기화\r\n                this.props.UserStore.setGuest();\r\n\r\n                //메인페이지로 이동\r\n                this.props.MainStore.setMainView(\"Home\")\r\n            }\r\n        }\r\n        //메인 로고를 눌렀을 경우\r\n        else if(view === \"Home\"){\r\n            this.props.MainStore.setMainView(view);\r\n        }\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            //Header에 페이지 이동을 위한 함수 setView를 props로 전달\r\n            <Header setView={this.setView}/>\r\n        );\r\n    }\r\n  };\r\n\r\n\r\nexport default HeaderContainer;","//Foote View 구성\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Header, List, Segment, Grid, Container } from \"semantic-ui-react\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"element\">\r\n        <Segment\r\n          inverted\r\n          vertical\r\n          style={{\r\n            padding: \"2em\",\r\n            fixed: \"bottom\",\r\n          }}\r\n        >\r\n          <Container style={{ margin: \"50px 0px 50px 0px\" }}>\r\n            <Grid divided inverted stackable>\r\n              <Grid.Row>\r\n                <Grid.Column width={3}>\r\n                  <Header inverted as=\"h3\" content=\"About\" />\r\n                  <List link inverted>\r\n                    <List.Item as=\"a\">Sitemap</List.Item>\r\n                    <List.Item as=\"a\">Contact Us</List.Item>\r\n                    <List.Item as=\"a\">Github</List.Item>\r\n                  </List>\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                  <Header inverted as=\"h3\" content=\"Services\" />\r\n                  <List link inverted>\r\n                    <List.Item as=\"a\">Suzy Official Site</List.Item>\r\n                    <List.Item as=\"a\">FAQ</List.Item>\r\n                    <List.Item as=\"a\">How To Support</List.Item>\r\n                    <List.Item as=\"a\">Favorite X-Men</List.Item>\r\n                  </List>\r\n                </Grid.Column>\r\n                <Grid.Column width={9}>\r\n                  <Header as=\"h3\" inverted>\r\n                    About Suzy...\r\n                  </Header>\r\n                  <p>출생 1994년 10월 10일</p>\r\n                  <p>소속사 매니지먼트 숲</p>\r\n                  <p>데뷔 2010년 미쓰에이 싱글 앨범 [Bad But Good]</p>\r\n                  <p>\r\n                    수상 2019년 SBS 연기대상 미니시리즈부문 여자 최우수연기상\r\n                    (배가본드)\r\n                  </p>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Container>\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Segment,\r\n  ButtonGroup,\r\n} from \"semantic-ui-react\";\r\nimport \"./Login.css\";\r\n\r\n// 피드백\r\nconst Login = (props) => {\r\n  let { lgnBtn, setLgnProp, onCancel, onSignUp } = props;\r\n\r\n  return (\r\n    // 로그인 폼\r\n    <Grid.Row\r\n      centered\r\n      textAlign=\"center\"\r\n      style={{ height: \"100vh\" }}\r\n      verticalAlign=\"middle\"\r\n    >\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header\r\n          className=\"login-header\"\r\n          textAlign=\"center\"\r\n          style={{ margin: \"0px 0px 50px 0px\" }}\r\n        >\r\n          Login\r\n        </Header>\r\n\r\n        <Form>\r\n          <Segment stacked textAlign=\"left\">\r\n            <Form.Input\r\n              label=\"ID\"\r\n              fluid\r\n              icon=\"user\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"ID\"\r\n              // setLgnProp함수를 만들어서 현재 사용자가 입력한 객체의 속성들을 가져옴\r\n\r\n              onChange={(e) => setLgnProp(\"userId\", e.target.value)}\r\n            />\r\n\r\n            <Form.Input\r\n              label=\"PW\"\r\n              fluid\r\n              icon=\"lock\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"PW\"\r\n              // setLgnProp함수를 만들어서 현재 사용자가 입력한 객체의 속성들을 가져옴\r\n              onChange={(e) => setLgnProp(\"pasd\", e.target.value)}\r\n            />\r\n\r\n            <ButtonGroup style={{}}>\r\n              <Button\r\n                onClick={onCancel}\r\n                floated=\"left\"\r\n                style={{\r\n                  width: \"180px\",\r\n                  margin: \"20px 0px 0px 0px\",\r\n                  backgroundColor: \"rgba(245, 240, 234, 0.6)\",\r\n                }}\r\n              >\r\n                취소\r\n              </Button>\r\n\r\n              <Button\r\n                floated=\"right\"\r\n                style={{\r\n                  width: \"180px\",\r\n                  margin: \"20px 0px 0px 30px\",\r\n                  backgroundColor: \"rgba(245, 240, 234, 0.6)\",\r\n                }}\r\n                // 로그인 버튼 클릭 시 발생하는 이벤트 ->로그인 발생\r\n                onClick={lgnBtn}\r\n              >\r\n                로그인\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Segment>\r\n\r\n          <p\r\n            style={{\r\n              fontSize: \"13px\",\r\n              textAlign: \"center\",\r\n              margin: \"20px 0px 0px 0px\",\r\n              backgroundColor: \"rgba(245, 240, 234, 0.1)\",\r\n            }}\r\n          >\r\n            아직 회원이 아니라면 회원가입하세요!\r\n            <Button\r\n              onClick={onSignUp}\r\n              fluid\r\n              size=\"large\"\r\n              style={{\r\n                margin: \"10px 0px 0px 0px\",\r\n                backgroundColor: \"rgba(245, 240, 234, 0.6)\",\r\n              }}\r\n            >\r\n              회원가입\r\n            </Button>\r\n          </p>\r\n        </Form>\r\n      </Grid.Column>\r\n    </Grid.Row>\r\n  );\r\n};\r\nexport default Login;\r\n\r\n// const Login = () => {\r\n//   const [form, setForm] = useState({\r\n//     id: '',\r\n//     pasd: ''\r\n//   });\r\n//   const { id, pasd } = form;\r\n//   const onChange = e => {\r\n//     setTimeout(() => console.log(e), 500);\r\n//     const nextForm = {\r\n//       ...form, // 기존의 form 내용을 이 자리에 복사 한 뒤\r\n//       [e.target.name]: e.target.value // 원하는 값을 덮어씌우기\r\n//     };\r\n//     setForm(nextForm);\r\n//   };\r\n//   const onClick = () => {\r\n//     alert(id + ': ' + pasd);\r\n//     setForm({\r\n//       id: '',\r\n//       pasd: ''\r\n//     });\r\n//   };\r\n//   const onKeyPress = e => {\r\n//     if (e.key === 'Enter') {\r\n//       onClick();\r\n//     }\r\n//   };\r\n","import React, { Component } from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport Login from \"../View/Login\";\r\n\r\n//inject 함수: 컴포넌트에서 스토어에 접근할 수 있게 해주는 함수\r\n//UserStore를 props로 전달받아서 사용할 수 있게 된다.\r\n@inject(\"UserStore\", \"MainStore\")\r\n@observer\r\nclass LoginContainer extends Component {\r\n  //입력창에 값 받아옴\r\n  setLgnProp = (key, value) => {\r\n    this.props.UserStore.setLgnProp(key, value);\r\n  };\r\n\r\n  //로그인 이벤트 발생 ->login이 정상 작동하면 메인 화면으로 이동\r\n  lgnBtn = () => {\r\n    if (this.props.UserStore.login()) {\r\n      this.props.MainStore.setMainView(\"Home\");\r\n      // console.log(this.props.UserStore.getUser);\r\n    }\r\n  };\r\n\r\n  //1)취소 이벤트\r\n  //MainStore.js에 생성한 setMainView 함수를 불러온다.\r\n  //setMainView함수는 \"HOME\"이라는 초기값을 갖고있다.\r\n  //아래 코드에서 한번 더 확인해준다.\r\n  //Mainpage로 가게 해주는 함수\r\n  onCancel = () => {\r\n    this.props.MainStore.setMainView(\"Home\");\r\n  };\r\n\r\n  onSignUp = () => {\r\n    this.props.MainStore.setMainView(\"SignUp\");\r\n  };\r\n  render() {\r\n    //user스토어에 있는 user state값 가져오기\r\n    const { user } = this.props.UserStore;\r\n\r\n    return (\r\n      <Login\r\n        onCancel={this.onCancel}\r\n        onSignUp={this.onSignUp}\r\n        user={user}\r\n        lgnBtn={this.lgnBtn}\r\n        setLgnProp={this.setLgnProp}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginContainer;\r\n","const SlideImages = [\r\n  {\r\n    id: 1,\r\n    imgUrl: \"slide_image/suzy1.jpg\",\r\n  },\r\n  {\r\n    id: 2,\r\n    imgUrl: \"slide_image/suzy2.jpg\",\r\n  },\r\n  {\r\n    id: 3,\r\n    imgUrl: \"slide_image/suzy3.jpg\",\r\n  },\r\n  {\r\n    id: 4,\r\n    imgUrl: \"slide_image/suzy4.jpg\",\r\n  },\r\n  {\r\n    id: 5,\r\n    imgUrl: \"slide_image/suzy6.png\",\r\n  },\r\n  {\r\n    id: 6,\r\n    imgUrl: \"slide_image/suzy7.png\",\r\n  },\r\n];\r\nexport default SlideImages;\r\n","//메인 페이지에 ImageSlider\r\n\r\nimport React, { Component } from \"react\";\r\nimport \"./ImageSlide.css\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport Images from \"../SlideImages.js\";\r\n\r\nclass ImageSlide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //Slide 이미지 변화를 위해 index값을 state로 유지\r\n    this.state = {\r\n      imgIndex: 0,\r\n    };\r\n    //image의 총 길이(예외처리를 위한 변수)\r\n    this.length = Images.length;\r\n  }\r\n\r\n  //각 버튼에 해당하는 이미지 변화 함수\r\n  imgChange = (symbol) => {\r\n    let { imgIndex } = this.state;\r\n    let nextIndex;\r\n\r\n    //오른쪽 버튼을 눌렀을 때\r\n    if (symbol === \"plus\") {\r\n      nextIndex = imgIndex + 1;\r\n      if (this.length === nextIndex) {\r\n        nextIndex = 0;\r\n      }\r\n    } \r\n    //왼쪽 버튼을 눌렀을 때\r\n    else {\r\n      nextIndex = imgIndex - 1;\r\n      if (nextIndex < 0) {\r\n        nextIndex = this.length - 1;\r\n      }\r\n    }\r\n\r\n    //계산된 index값 state로 전달\r\n    this.setState({\r\n      imgIndex: nextIndex,\r\n    });\r\n  };\r\n  render() {\r\n    //JSON형식으로 저장한 Image파일 리스트 저장\r\n    const slideImages = Images;\r\n    let { imgIndex } = this.state;\r\n    return (\r\n      <div className=\"slider-container\">\r\n        <img src={slideImages[imgIndex].imgUrl} alt=\"슬라이드 사진\" />\r\n        <Icon\r\n          name=\"angle right\"\r\n          size=\"huge\"\r\n          className=\"angle-right-icon\"\r\n          onClick={() => this.imgChange(\"plus\")}\r\n        ></Icon>\r\n        <Icon\r\n          name=\"angle left\"\r\n          size=\"huge\"\r\n          className=\"angle-left-icon\"\r\n          onClick={() => this.imgChange(\"minus\")}\r\n        ></Icon>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageSlide;\r\n","import { List, Header } from \"semantic-ui-react\";\r\nimport \"./ProductList.css\";\r\nimport React from \"react\";\r\n\r\nconst ProductList = (props) => {\r\n  const getDataList = () => {\r\n    let datas = props.list;\r\n\r\n    let dataList = datas.map((data, idx) => {\r\n      return (\r\n        <List.Item key={idx} onClick={() => props.selectProduct(data)}>\r\n          <List.Content>\r\n            <List.Header>{data}</List.Header>\r\n          </List.Content>\r\n        </List.Item>\r\n      );\r\n    });\r\n    return dataList;\r\n  };\r\n  let dataList = getDataList();\r\n  return (\r\n    <div className=\"product-list\">\r\n      <Header size=\"huge\">Suzy</Header>\r\n      <hr></hr>\r\n      <List size=\"huge\" animated verticalAlign=\"middle\">\r\n        {dataList}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n\r\n// class ProductList extends Component {\r\n//   getDataList() {\r\n//     let datas = this.props.list;\r\n//     let dataList;\r\n\r\n//     dataList = datas.map((data, idx) => {\r\n//       return (\r\n//         <List.Item key={idx} onClick={() => console.log(idx)}>\r\n//           <List.Content>\r\n//             <List.Header>{data}</List.Header>\r\n//           </List.Content>\r\n//         </List.Item>\r\n//       );\r\n//     });\r\n//     return dataList;\r\n//   }\r\n\r\n//   render() {\r\n//     let dataList = this.getDataList();\r\n//     return (\r\n//       <div className=\"product-list\">\r\n//         <Header size=\"huge\">Suzy</Header>\r\n//         <hr></hr>\r\n//         <List size=\"huge\" animated verticalAlign=\"middle\">\r\n//           {dataList}\r\n//         </List>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default ProductList;\r\n","import React, { Component } from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport ProductList from \"../View/ProductList\";\r\n\r\n@inject(\"ProductStore\")\r\n@observer\r\nclass ProductListContainer extends Component {\r\n  selectProduct = (data) =>{\r\n    this.props.ProductStore.setSelectProducts(data);\r\n  }\r\n\r\n  render() {\r\n    let list = this.props.ProductStore.getList;\r\n    return <ProductList list={list} selectProduct={this.selectProduct}/>;\r\n  }\r\n}\r\n\r\nexport default ProductListContainer;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Header, Image, Modal, Input } from \"semantic-ui-react\";\r\n\r\nconst ProductModal = (props) => {\r\n  const [price, setPrice] = useState(\"\");\r\n  const onChange = (e) => {\r\n    let updatePrice = e.target.value;\r\n    setPrice(updatePrice);\r\n  };\r\n\r\n  let { open, onClose, product, user, onUpdate, onDelete, addBasket } = props;\r\n  return (\r\n    <Modal open={open} onClose={onClose}>\r\n      <Modal.Header>Product</Modal.Header>\r\n      <Modal.Content image>\r\n        <Image wrapped src={product.imgUrl} style={{ marginBottom: 10 }} />\r\n\r\n        <Modal.Description>\r\n          <Header>{product.pName}</Header>\r\n          <p>\r\n            {product.des.split(\"\\n\").map((i, idx) => {\r\n              return <p key={idx}>{i}</p>;\r\n            })}\r\n          </p>\r\n          <p>{product.price}</p>\r\n          <br></br>\r\n          {user.userId === \"admin\" && <>\r\n          <span>price : </span>\r\n          <Input\r\n            size=\"mini\"\r\n            placeholder={product.price}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          </>}\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        {user.userId === \"admin\" && (\r\n          <Button\r\n            content=\"Update\"\r\n            color=\"orange\"\r\n            onClick={() => onUpdate(price)} //?\r\n          ></Button>\r\n        )}\r\n        {user.userId === \"admin\" && (\r\n          <Button\r\n            content=\"Delete\"\r\n            color=\"red\"\r\n            onClick={onDelete} //?\r\n          ></Button>\r\n        )}\r\n\r\n        <Button\r\n          content=\"Basket\"\r\n          color=\"black\"\r\n          onClick={addBasket} //?\r\n        ></Button>\r\n        <Button\r\n          content=\"Buy\"\r\n          labelPosition=\"right\"\r\n          icon=\"checkmark\"\r\n          onClick={onClose} //?\r\n          positive\r\n        />\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ProductModal;","import React, { Component } from \"react\";\r\nimport ProductModal from \"../View/ProductModal\";\r\nimport { inject, observer } from \"mobx-react\";\r\n\r\n@inject(\"ProductStore\", \"UserStore\")\r\n@observer\r\nclass ProductModalContainer extends Component {\r\n  onClose = () => {\r\n    this.props.ProductStore.setClose();\r\n  };\r\n  onUpdate = (price) => {\r\n    this.props.ProductStore.updateProduct(price);\r\n  };\r\n  onDelete = () => {\r\n    this.props.ProductStore.deleteProduct();\r\n  };\r\n  addBasket = () =>{\r\n    if(this.props.UserStore.getUser.userId === \"guest\"){\r\n      alert(\"회원만 이용 가능합니다.\")\r\n    }\r\n    else{\r\n    let product = this.props.ProductStore.getProduct;\r\n    this.props.UserStore.setBasket(product);\r\n    this.onClose();\r\n    }\r\n  }\r\n  render() {\r\n    const user = this.props.UserStore.getUser;\r\n    const open = this.props.ProductStore.getOpen;\r\n    const product = this.props.ProductStore.getProduct;\r\n    return (\r\n      <ProductModal\r\n        open={open}\r\n        onClose={this.onClose}\r\n        onUpdate={this.onUpdate}\r\n        onDelete={this.onDelete}\r\n        addBasket={this.addBasket}\r\n        product={product}\r\n        user={user}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductModalContainer;","import React, { Component } from \"react\";\r\nimport { Card, Image, Pagination } from \"semantic-ui-react\";\r\nimport \"./ProductItem.css\";\r\nimport ProductModalContainer from \"../Container/ProductModalContainer\";\r\n\r\nclass ProductItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pageNum: 1,\r\n    };\r\n  }\r\n  \r\n  getDataList() {\r\n    let { products, onOpen } = this.props;\r\n    let { pageNum } = this.state;\r\n    let pNum = pageNum;\r\n    if (Math.ceil(products.length / 3) < pageNum) {\r\n      pNum = 1;\r\n      this.setState({\r\n        pageNum: pNum,\r\n      });\r\n    }\r\n    let startNum, lastNum;\r\n    startNum = (pNum - 1) * 3;\r\n    lastNum = pNum * 3;\r\n\r\n    let dataList = products.map((data, idx) =>\r\n      idx >= startNum && idx < lastNum ? (\r\n        <Card onClick={() => onOpen(data)} key={data.id} className=\"card-item\">\r\n          <Image src={data.imgUrl} wrapped ui={false} />\r\n          <Card.Content>\r\n            <Card.Header>Suzy</Card.Header>\r\n            <Card.Meta>\r\n              <span>{data.pName}</span>\r\n              <br />\r\n              <span>{data.property}</span>\r\n            </Card.Meta>\r\n            <Card.Description>{data.price}</Card.Description>\r\n          </Card.Content>\r\n        </Card>\r\n      ) : (\r\n        []\r\n      )\r\n    );\r\n    return dataList;\r\n  }\r\n  pageChange = (e, { activePage }) => {\r\n    this.setState({\r\n      pageNum: activePage,\r\n    });\r\n  };\r\n  render() {\r\n    let { length } = this.props;\r\n    let dataList = this.getDataList();\r\n    return (\r\n      <div className=\"product-item\">\r\n        <Card.Group itemsPerRow={3}>{dataList}</Card.Group>\r\n        <div className=\"product-pagination\">\r\n          <Pagination\r\n            defaultActivePage={1}\r\n            firstItem={null}\r\n            lastItem={null}\r\n            pointing\r\n            secondary\r\n            totalPages={Math.ceil(length / 3)}\r\n            onPageChange={this.pageChange}\r\n          />\r\n        </div>\r\n\r\n        <ProductModalContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductItem;\r\n","import React, { Component } from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport ProductItem from \"../View/ProductItem\";\r\n\r\n@inject(\"ProductStore\")\r\n@observer\r\nclass ProductItemContainer extends Component {\r\n  onOpen = (data) => {\r\n    let product = {\r\n      id: data.id,\r\n      pName: data.pName,\r\n      price: data.price,\r\n      imgUrl: data.imgUrl,\r\n      des: data.des,\r\n      detail1: data.detailImgUrl1,\r\n      detail2: data.detailImgUrl2,\r\n      detail3: data.detailImgUrl3,\r\n    };\r\n    this.props.ProductStore.setProduct(product);\r\n    this.props.ProductStore.setOpen();\r\n  };\r\n  render() {\r\n    const products = this.props.ProductStore.getSelectProducts;\r\n    const length = products.length;\r\n\r\n    return (\r\n      <ProductItem onOpen={this.onOpen} products={products} length={length} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductItemContainer;\r\n","import React, { Component } from 'react';\r\nimport { Image, Grid, Reveal } from 'semantic-ui-react';\r\nimport './Etc.css';\r\nclass Etc extends Component {\r\n    render() {\r\n        return (\r\n            <Grid columns={3} style={{ textAlign: 'center', margin: '100px 0px 100px 70px' }}>\r\n                <Grid.Row>\r\n                    <Grid.Column>\r\n                        <Reveal animated=\"fade\">\r\n                            <Reveal.Content visible>\r\n                                <Image src=\"etc_image/etc1-1.png\" size=\"large\" />\r\n                            </Reveal.Content>\r\n                            <Reveal.Content hidden>\r\n                                <Image src=\"etc_image/etc1.png\" size=\"large\" />\r\n                            </Reveal.Content>\r\n                        </Reveal>\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                        <Reveal animated=\"fade\">\r\n                            <Reveal.Content visible>\r\n                                <Image src=\"etc_image/suzy1.png\" size=\"large\" />\r\n                            </Reveal.Content>\r\n                            <Reveal.Content hidden>\r\n                                <Image src=\"etc_image/etc2.png\" size=\"large\" />\r\n                            </Reveal.Content>\r\n                        </Reveal>\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                        <Reveal animated=\"fade\">\r\n                            <Reveal.Content visible>\r\n                                <Image src=\"etc_image/suzy2.png\" size=\"large\" />\r\n                            </Reveal.Content>\r\n                            <Reveal.Content hidden>\r\n                                <Image src=\"etc_image/etc3.png\" size=\"large\" />\r\n                            </Reveal.Content>\r\n                        </Reveal>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            // <div className=\"container\">\r\n            //   <Image.Group size=\"large\">\r\n            //     <Image\r\n            //       className=\"container-image\"\r\n            //       verticalAlign=\"middle\"\r\n            //       src=\"etc_image/suzy1.png\"\r\n            //     />\r\n            //     <Image\r\n            //       className=\"container-image\"\r\n            //       verticalAlign=\"middle\"\r\n            //       src=\"etc_image/suzy2.png\"\r\n            //     />\r\n            //     <Image\r\n            //       className=\"container-image\"\r\n            //       verticalAlign=\"middle\"\r\n            //       src=\"etc_image/suzy3.png\"\r\n            //     />\r\n            //   </Image.Group>\r\n            // </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Etc;\r\n","import React from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport ImageSlide from \"../ImageSlider/ImageSlide\";\r\nimport ProductListContainer from \"../Product/Container/ProductListContainer\";\r\nimport ProductItemContainer from \"../Product/Container/ProductItemContainer\";\r\nimport Etc from \"../Etc/Etc\";\r\n\r\n/*이미지 슬라이딩부터 etc까지가 main.js에 해당*/\r\nconst Main = () => {\r\n  return (\r\n    <>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <ImageSlide />\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column width={4}>\r\n          <ProductListContainer />\r\n        </Grid.Column>\r\n        <Grid.Column width={12}>\r\n          <ProductItemContainer />\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Etc />\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </>\r\n  );\r\n};\r\nexport default Main;\r\n","//BasketContainer로부터 받은 정보로 View 구성\r\n\r\nimport React, { Component } from 'react';\r\nimport { Grid, Header, Card, Image, Button } from 'semantic-ui-react';\r\nimport \"./Basket.css\";\r\n\r\nclass Basket extends Component {\r\n    getDataList() {\r\n        let {products, baskets} = this.props;\r\n\r\n        //기존 상품리스트에서 baskets에 해당하는 값만 출력\r\n        let dataList = products.map((data) => baskets.find(basket => data.id === basket) ?\r\n        (\r\n            <Card key={data.id} className=\"card-item\">\r\n              <Image src={data.imgUrl} wrapped ui={false} />\r\n              <Card.Content>\r\n                <Card.Header>Suzy</Card.Header>\r\n                <Card.Meta>\r\n                  <span>{data.pName}</span>\r\n                  <br />\r\n                  <span>{data.property}</span>\r\n                </Card.Meta>\r\n                <Card.Description>{data.price}</Card.Description>\r\n              </Card.Content>\r\n            </Card>\r\n        ) : []\r\n        );\r\n        return dataList;\r\n      }\r\n    render() {\r\n        let dataList = this.getDataList();\r\n        return (\r\n            <Grid.Row className=\"basket-minheiht\" >\r\n                <Grid.Column>\r\n                    <div className=\"basket-container\">\r\n                <Header as=\"h1\" className=\"basket-header\">Basket</Header>\r\n\r\n                {/* 구매버튼을 이용해서 장바구니 초기화 */}\r\n                <Button \r\n                onClick={this.props.onBuy}\r\n                className=\"basket-button\"\r\n          content=\"Buy\"\r\n          labelPosition=\"right\"\r\n          icon=\"checkmark\"\r\n          positive\r\n        />\r\n                <hr></hr>\r\n                <Card.Group itemsPerRow={4}>{dataList}</Card.Group>\r\n                </div>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Basket;","//장바구니에 관한 정보를 각 스토어에서 불러와\r\n//Basket.js로 전달해주는 컨테이너\r\n\r\nimport React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport Basket from './Basket';\r\n\r\n@inject(\"ProductStore\", \"UserStore\", \"MainStore\")\r\n@observer\r\nclass BasketContainer extends Component {\r\n\r\n    //장바구니에서 구매를 눌렀을때\r\n    //UserStore에서 해당 User가 가진 basket배열을 초기화\r\n    onBuy = () =>{\r\n        alert(\"구매에 성공하였습니다!!\");\r\n        this.props.UserStore.clearBasket();\r\n    }\r\n    render() {\r\n        //Basket.js에 props로 넘겨줄 요소를 불러옴\r\n        //상품리스트, 해당유저의 장바구니 정보\r\n        const products = this.props.ProductStore.getProducts;\r\n        const user = this.props.UserStore.getUser;\r\n        const baskets = user.basket;\r\n        return (\r\n            <Basket products={products} baskets={baskets} onBuy={this.onBuy}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BasketContainer;","import React from \"react\";\r\nimport {\r\n  Message,\r\n  ButtonGroup,\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport \"./SignUp.css\";\r\n\r\nconst SignUp = (props) => {\r\n  //onAddUser => 회원가입\r\n  //onSignUpProp =>회원가입 당시 입력한 값을 받아옴\r\n  //toLogin =>회원가입 완료시 자동으로 로그인 창으로 이동\r\n  let { onAddUser, onSignUpProp, toLogin } = props;\r\n  return (\r\n    <Grid.Row\r\n      centered\r\n      textAlign=\"center\"\r\n      style={{ height: \"100vh\" }}\r\n      verticalAlign=\"middle\"\r\n    >\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header\r\n          className=\"signup-header\"\r\n          textAlign=\"center\"\r\n          style={{ margin: \"0px 0px 50px 0px\" }}\r\n        >\r\n          Sign Up\r\n        </Header>\r\n\r\n        <Form>\r\n          <Segment stacked textAlign=\"left\">\r\n            <Form.Input\r\n              label=\"NAME\"\r\n              placeholder=\"\"\r\n              //2. 입력창에서의 값가져오기\r\n              onChange={(e) => onSignUpProp(\"name\", e.target.value)}\r\n            />\r\n            <Form.Input\r\n              label=\"ID\"\r\n              placeholder=\"영문소문자/숫자,4-16자\"\r\n              onChange={(e) => onSignUpProp(\"userId\", e.target.value)}\r\n            />\r\n            <Form.Input\r\n              label=\"Password\"\r\n              placeholder=\"영문/숫자/특수문자 중 2가지 이상 조합, 10자~16자\"\r\n              onChange={(e) => onSignUpProp(\"pasd\", e.target.value)}\r\n            />\r\n\r\n            <ButtonGroup style={{}}>\r\n              {/* <Button\r\n                floated=\"left\"\r\n                onClick={onCancel}\r\n                style={{\r\n                  width: \"180px\",\r\n                  margin: \"20px 0px 0px 0px\",\r\n                  backgroundColor: \"rgba(245, 240, 234, 0.6)\",\r\n                }}\r\n              >\r\n                취소\r\n              </Button> */}\r\n              <Button\r\n                // 회원가입 이벤트 발생\r\n                onClick={onAddUser}\r\n                fluid\r\n                floated=\"right\"\r\n                size=\"large\"\r\n                style={{\r\n                  width: \"28rem\",\r\n                  margin: \"10px 0px 0px 0px\",\r\n                  backgroundColor: \"rgba(245, 240, 234, 0.6)\",\r\n                }}\r\n              >\r\n                회원가입\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Segment>\r\n\r\n          <Message\r\n            textAlign=\"center\"\r\n            style={{\r\n              fontSize: \"13px\",\r\n              margin: \"20px 0px 0px 0px\",\r\n              backgroundColor: \"rgba(245, 240, 234, 0.1)\",\r\n            }}\r\n          >\r\n            이미 회원이시라면 로그인하세요!\r\n            {/* 로그인 창으로 이동 */}\r\n            <Button\r\n              fluid\r\n              //4. toLogin버튼\r\n              onClick={toLogin}\r\n              size=\"large\"\r\n              style={{\r\n                margin: \"10px 0px 0px 0px\",\r\n                backgroundColor: \"rgba(245, 240, 234, 0.6)\",\r\n              }}\r\n            >\r\n              로그인\r\n            </Button>\r\n          </Message>\r\n        </Form>\r\n      </Grid.Column>\r\n    </Grid.Row>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { Component } from \"react\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport SignUp from \"../View/SignUp\";\r\n\r\n@inject(\"UserStore\", \"MainStore\")\r\n@observer\r\nclass SignUpContainer extends Component {\r\n  //입력창에 값 받아옴\r\n  //해당 name값에 입력된 value을 받아옴\r\n  onSignUpProp = (name, value) => {\r\n    this.props.UserStore.setSignUpProp(name, value);\r\n  };\r\n\r\n  //3. if의 조건이 true면 alert을 띄우고 로그인 창으로 이동\r\n  onAddUser = () => {\r\n    if (this.props.UserStore.addSignUp(this.props.UserStore.signUpUser)) {\r\n      alert(\"회원가입 완료!\");\r\n      this.props.MainStore.setMainView(\"Login\");\r\n    }\r\n  };\r\n\r\n  //1. 로그인 화면이동\r\n  toLogin = () => {\r\n    this.props.MainStore.setMainView(\"Login\");\r\n  };\r\n\r\n  render() {\r\n    const { signUpUser } = this.props.UserStore;\r\n\r\n    return (\r\n      //4. 위의 함수를 불러올 수 있게 셋업\r\n      <SignUp\r\n        signUpUser={signUpUser}\r\n        onSignUpProp={this.onSignUpProp}\r\n        onAddUser={this.onAddUser}\r\n        toLogin={this.toLogin}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpContainer;\r\n","import './App.css';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport React, { Component } from 'react';\r\nimport HeaderContainer from './Header/HeaderContainer';\r\nimport Footer from './Footer/Footer';\r\nimport LoginContainer from './User/Container/LoginContainer';\r\nimport Main from './MainPage/Main';\r\nimport BasketContainer from './Basket/BasketContainer';\r\nimport { inject, observer } from 'mobx-react';\r\nimport SignUpContainer from './User/Container/SignUpContainer';\r\n\r\n/*Header, Container: Main, Login, Basket, Signup, Footer 설정*/\r\n@inject('MainStore')\r\n@observer\r\nclass App extends Component {\r\n    render() {\r\n        //\r\n        let view = this.props.MainStore.getMainView;\r\n        return (\r\n            <Grid>\r\n                <Grid.Row>\r\n                    <Grid.Column>\r\n                        <HeaderContainer />\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n                {/* Main.js의 메인 부분을 가져옴 */}\r\n                {view === 'Home' && <Main />}\r\n                {view === 'Login' && <LoginContainer />}\r\n                {view === 'Basket' && <BasketContainer />}\r\n                {view === 'SignUp' && <SignUpContainer />}\r\n\r\n                <Grid.Row style={{ paddingBottom: 0 }}>\r\n                    <Grid.Column>\r\n                        <Footer />\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const Products = [\r\n    {\r\n        id: 1,\r\n        pName: 'OFFICIAL FANLIGHT',\r\n        price: '35,000',\r\n        imgUrl: 'product_image/1.JPG',\r\n        detailImgUrl1: 'product_image/1-1.JPG',\r\n        detailImgUrl2: 'product_image/1-2.JPG',\r\n        detailImgUrl3: 'product_image/1-3.JPG',\r\n        des:\r\n            '[상품정보]\\n  - 상품 : SUZY OFFICIAL FANLIGHT\\n - 소재 : ABS, PC, 실리콘, 알루미늄\\n - 구성품 : 응원봉, 스트랩, 사용자설명서\\n - 사이즈 : 75.4 X 74.8 X 247(mm)\\n - 무게 : 205.7(g)\\n - 판매원 : SM BRAND MARKETING\\n - POWER : 알카라인 AAA 건전지 3개(건전지 미포함 상품)\\n - 작동시간 : 약 3시간(조작 방법에 따라 상이할 수 있습니다.)\\n - KC 인증 : R-C-REI-SME-SM01\\n - 제조사 : 드림어스 컴퍼니 ',\r\n        property: 'Concert',\r\n    },\r\n    {\r\n        id: 2,\r\n        pName: 'ARTIST CASE - Purpose',\r\n        price: '25,000',\r\n        imgUrl: 'product_image/2.JPG',\r\n        detailImgUrl1: 'product_image/2-1.JPG',\r\n        detailImgUrl2: 'product_image/2-2.JPG',\r\n        detailImgUrl3: 'product_image/2-3.JPG',\r\n        des:\r\n            '[상품정보]\\n - 상품 : 케이스\\n - 소재 : POLYCARBONATE\\n - 사이즈(CM) : 14x6.5x0.8\\n - 판매원 : SM BRAND MARKETING\\n - 제조국 : 한국\\n - 제조년월 : 2019.03 ',\r\n        property: 'Living',\r\n    },\r\n    {\r\n        id: 3,\r\n        pName: 'CHEER UP BRACELET',\r\n        price: '25,000',\r\n        imgUrl: 'product_image/3.JPG',\r\n        detailImgUrl1: 'product_image/3-1.JPG',\r\n        detailImgUrl2: 'product_image/3-2.JPG',\r\n        detailImgUrl3: 'product_image/3-3.JPG',\r\n        des:\r\n            '[상품정보]\\n - 상품 : 팔찌\\n - 소재 : METAL\\n - 사이즈(CM) : 6x2x0.5\\n - 판매원 : SM BRAND MARKETING\\n - 제조국 : 한국\\n - 제조년월 : 2019.12 ',\r\n        property: 'Accessory',\r\n    },\r\n    {\r\n        id: 4,\r\n        pName: 'Pinky Festival',\r\n        price: '10,900',\r\n        imgUrl: 'product_image/4.JPG',\r\n        detailImgUrl1: 'product_image/4-1.JPG',\r\n        detailImgUrl2: 'product_image/4-2.JPG',\r\n        detailImgUrl3: 'product_image/4-3.JPG',\r\n        des:\r\n            '[상품정보]\\n - 상품명 :띠부띠부_핑키페스티벌\\n - 사이즈(cm) : 22X10X0.65\\n - 무게(g) : 12g\\n - 판매원 : SM BRAND MARKETING\\n - 제조국 : 대한민국\\n - 판매개시일 : 2019. 08 ',\r\n        property: 'Beauty',\r\n    },\r\n    {\r\n        id: 5,\r\n        pName: 'LOVELOVE KEYRING',\r\n        price: '25,000',\r\n        imgUrl: 'product_image/5.JPG',\r\n        detailImgUrl1: 'product_image/5-1.JPG',\r\n        detailImgUrl2: 'product_image/5-2.JPG',\r\n        detailImgUrl3: 'product_image/5-3.JPG',\r\n        des:\r\n            '[상품정보]\\n - 상품 : 키링\\n - 소재 : METAL\\n - 사이즈(CM) : 6.5x14.5x1.3\\n - 판매원 : SM BRAND MARKETING\\n - 제조국 : 한국\\n - 제조년월 : 2019.05 ',\r\n        property: 'Accessory',\r\n    },\r\n    {\r\n        id: 6,\r\n        pName: 'ZERO MINI BAG & KEYRING SET BLACK',\r\n        price: '19,900',\r\n        imgUrl: 'product_image/6.PNG',\r\n        detailImgUrl1: 'product_image/6-1.JPG',\r\n        detailImgUrl2: 'product_image/6-2.JPG',\r\n        detailImgUrl3: 'product_image/6-3.JPG',\r\n        des:\r\n            '[상품정보]\\n - 상품 : ZERO MINI BAG & KEYRING SET\\n - 색상 : BLACK\\n - 사이즈(cm) : 가로 31.5 * 세로 18 * 넓이 10.5 / 끈길이 42, 키링 7.5*6.4\\n - 제조국 : 중국  ',\r\n        property: 'Living',\r\n    },\r\n    {\r\n        id: 7,\r\n        pName: 'CHEER UP STICK KEYRING',\r\n        price: '9,500',\r\n        imgUrl: 'product_image/7.PNG',\r\n        detailImgUrl1: 'product_image/7-1.JPG',\r\n        detailImgUrl2: 'product_image/7-2.JPG',\r\n        detailImgUrl3: 'product_image/7-3.JPG',\r\n        des:\r\n            '[상품정보]\\n - 상품명 :수지(Suzy) 응원봉 키링\\n - 규격 : 47.7*100.7*29.8\\n - 무게(g) : 56g\\n - 판매원 : SM BRAND MARKETING\\n - 제조국 : 중국\\n - 판매개시일 : 2019. 10 ',\r\n        property: 'Accessory',\r\n    },\r\n    {\r\n        id: 8,\r\n        pName: 'SUZY SOLO ALBUM',\r\n        price: '16,500',\r\n        imgUrl: 'product_image/8.jpg',\r\n        detailImgUrl1: 'product_image/8-1.jpg',\r\n        detailImgUrl2: 'product_image/8-2.jpg',\r\n        detailImgUrl3: 'product_image/8-3.jpg',\r\n        des:\r\n            '음반소개\\n 앨범 사양\\n 1. 앨범 1종\\n - 화보집 96P\\n -가사지8P\\n 2. [랜덤] 커버 엽서\\n - 4EA / 랜덤 1종 표지 노출\\n 3. [랜덤] 포토카드\\n - RANDOM 1 OUTOF 8\\n 4. CD-R\\n - CD-R1종 ',\r\n        property: 'Music',\r\n    },\r\n    {\r\n        id: 9,\r\n        pName: 'LOVELOVE NECKLACE',\r\n        price: '29,000',\r\n        imgUrl: 'product_image/9.PNG',\r\n        detailImgUrl1: 'product_image/9-1.PNG',\r\n        detailImgUrl2: 'product_image/9-2.PNG',\r\n        detailImgUrl3: 'product_image/9-3.PNG',\r\n        des:\r\n            '[상품정보]\\n *설레는 크리스마스의 반짝이는 떨림을 담은 목걸이(한정판)*\\n - 상품 : 트윙클 실버 목걸이\\n - 소재 : 925 SILVER + RHODIUM Plating (3mils) - 스톤 : C.Z White 약 3mm\\n - 사이즈(CM) : 9.5x7x3, pandant 1.1x1.3, chain 45+3\\n - 판매원 : SM BRAND MARKETING \\n - 제조국 : 한국\\n - 제조년월 : 2019.12 ',\r\n        property: 'Accessory',\r\n    },\r\n    {\r\n        id: 10,\r\n        pName: 'ARTIST MTM',\r\n        price: '68,000',\r\n        imgUrl: 'product_image/10.PNG',\r\n        detailImgUrl1: 'product_image/10-1.PNG',\r\n        detailImgUrl2: 'product_image/10-2.PNG',\r\n        detailImgUrl3: 'product_image/10-3.PNG',\r\n        des:\r\n            ' [상품정보]\\n - 상품 : 맨투맨\\n - 소재 : COTTON\\n - 사이즈(CM) : 어깨 52.5\\n 가슴 65\\n 밑단 52\\n 소매기장 63\\n 총길이 70.5\\n - 판매원 : SM BRAND MARKETING\\n - 제조국 : 한국\\n - 제조년월 : 2019.10',\r\n        property: 'Living',\r\n    },\r\n    {\r\n        id: 11,\r\n        pName: 'TYPOGRAPHIC TRAVEL POUCH with ALIFE',\r\n        price: '27,000',\r\n        imgUrl: 'product_image/11.PNG',\r\n        detailImgUrl1: 'product_image/11-1.PNG',\r\n        detailImgUrl2: 'product_image/11-2.PNG',\r\n        detailImgUrl3: 'product_image/11-3.PNG',\r\n        des:\r\n            ' 상품 : 트래블 파우치 \\n 소재 : COATED COTTON \\n 사이즈(CM) : 25X14X2 \\n 무게(g) : 95 \\n 판매원 : SM BRAND MARKETING\\n 제조국 : 한국\\n 제조년월 : 2019.06',\r\n        property: 'Living',\r\n    },\r\n    {\r\n        id: 12,\r\n        pName: 'SLEEPING MASK',\r\n        price: '18,000',\r\n        imgUrl: 'product_image/12.JPG',\r\n        detailImgUrl1: 'product_image/12-1.JPG',\r\n        detailImgUrl2: 'product_image/12-2.JPG',\r\n        detailImgUrl3: 'product_image/12-3.JPG',\r\n        des:\r\n            '[사용방법]\\n 1. 세안 후 화장수로 피부결을 정돈합니다. \\n 2. 마스크를 꺼내어 눈을 중심으로 얼굴에 밀착합니다. \\n 3. 10~20분 정도 휴식 후 마스크를 떼어냅니다.\\n 4. 얼굴에 남은 내용물은 두드려 흡수시킵니다.',\r\n        property: 'Beauty',\r\n    },\r\n    {\r\n        id: 13,\r\n        pName: 'Miss A Colors',\r\n        price: '14,900',\r\n        imgUrl: 'product_image/13.jpg',\r\n        detailImgUrl1: 'product_image/13-1.jpg',\r\n        detailImgUrl2: 'product_image/13-2.jpg',\r\n        detailImgUrl3: 'product_image/13-3.jpg',\r\n        des:\r\n            ' miss A가 세 번째 미니앨범이자 일곱 번째 프로젝트 앨범 [Colors]로 돌아온다.\\n 1년 5개월 만에 돌아온 그녀들 miss A! 지난 앨범 [허쉬]로 어쿠스틱한 분위기와 인상적인 곡으로 속삭이는 듯한 가사와 몽환적인 멜로디로 사랑을 받았던 miss A이기에 이번 컴백 앨범에 대한 기대감을 더욱 고조시키고 있다. \\n 세 번째 미니 앨범의 타이틀곡 다른 남자 말고 너 는 대중적인 힙합과 트랙 리듬이 인상적인 곡으로 여자들의 적극적인 사랑방식을 대변해주는 곡이다.',\r\n        property: 'Music',\r\n    },\r\n    {\r\n        id: 14,\r\n        pName: 'Miss A 미니앨범 4집',\r\n        price: '14,900',\r\n        imgUrl: 'product_image/14.jpg',\r\n        detailImgUrl1: 'product_image/14-1.jpg',\r\n        detailImgUrl2: 'product_image/14-2.gif',\r\n        detailImgUrl3: 'product_image/14-3.jpg',\r\n        des:\r\n            \"지금 가장 뜨거운 아티스트, 미쓰에이 수지와 엑소 백현이 듀엣곡 'Dream(드림)'을 발표한다.\\n SM과 JYP의 콜라보로 뜨거운 화제를 모은 두 사람은 ‘Dream’에서 달콤한 하모니를 선보인다.\\n 바쁜 연기 활동 중에도 노래뿐만 아니라 최근 직접 작사를 하며 가수 행보를 놓치지 않는 수지, 엑소의 메인 보컬로서 뛰어난 가창력을 인정받으며 글로벌로 뻗어 나가는 백현.\\n ‘Dream’은 두 사람이 가진 뮤지션적인 색깔을 보여줄 수 있는 곡이자 뮤지션으로서 한 뼘 더 성장하는 계기가 될 것이다. \",\r\n        property: 'Music',\r\n    },\r\n    {\r\n        id: 15,\r\n        pName: '2018 WALL CALENDAR (벽걸이 캘린더) Limited Edition',\r\n        price: '22,000',\r\n        imgUrl: 'product_image/15.jpg',\r\n        detailImgUrl1: 'product_image/15-1.jpg',\r\n        detailImgUrl2: 'product_image/15-2.jpg',\r\n        detailImgUrl3: 'product_image/15-3.jpg',\r\n        des:\r\n            '수지만의 로맨틱한 감성과 러블리한 매력이 녹아든 이번 2018 시즌그리팅 제2탄!\\n 다양한 착장을 소화하면서 완성한 여러 스타일리시한 화보컷이 포스터를 방불케하는\\n 500*770mm 크기에 큼직하게 담겼다. ',\r\n        property: 'Photo',\r\n    },\r\n    {\r\n        id: 16,\r\n        pName: 'Suzy?Suzy 화보집',\r\n        price: '15,000',\r\n        imgUrl: 'product_image/16.jpg',\r\n        detailImgUrl1: 'product_image/16-1.jpg',\r\n        detailImgUrl2: 'product_image/16-2.jpg',\r\n        detailImgUrl3: 'product_image/16-3.jpg',\r\n        des:\r\n            'miss A 수지 첫 개인 화보집 suzy?suzy.\\n -가장 수지답게, 수지다운, 수지만의 화보집\\n -‘하루라도 젊을 때’의 진짜 수지를 만나다.\\n miss A 수지의 첫 단독 화보집 ‘suzy? suzy.’는 ‘하루라도 젊을 때’라는 유쾌한 발상에서 시작되었다.\\n 이처럼 ‘suzy? suzy.’는 20대의 진짜 수지를 담고 있다. 솔직하고 거짓 없는 가장 ‘수지다운’ 모습을 기록하기 위해 본인이 기획단계서부터 의상, 표지 선정까지 적극적으로 참여했다.',\r\n        property: 'Photo',\r\n    },\r\n    {\r\n        id: 17,\r\n        pName: 'LOVELOVE MULTI BRACELET',\r\n        price: '32,000',\r\n        imgUrl: 'product_image/17.PNG',\r\n        detailImgUrl1: 'product_image/17-1.PNG',\r\n        detailImgUrl2: 'product_image/17-2.PNG',\r\n        detailImgUrl3: 'product_image/17-3.PNG',\r\n        des:\r\n            '[상품정보]\\n - 상품 : 팔찌\\n - 소재 : METAL,STONE\\n - 사이즈(CM) : 9x9x4\\n - 판매원 : SM BRAND MARKETING\\n - 제조국 : 한국\\n - 제조년월 : 2019.05 ',\r\n        property: 'Accessory',\r\n    },\r\n    {\r\n        id: 18,\r\n        pName: 'HOLOGRAM POSTCARD',\r\n        price: '2,000',\r\n        imgUrl: 'product_image/18.PNG',\r\n        detailImgUrl1: 'product_image/18-1.PNG',\r\n        detailImgUrl2: 'product_image/18-2.PNG',\r\n        detailImgUrl3: 'product_image/18-3.PNG',\r\n        des:\r\n            '[상품정보]\\n 상품 : 홀로그램 엽서 (1EA)\\n 소재 : PAPER, FILM\\n 사이즈 : 11X15.4 (CM)\\n 판매원 : SM ENTERTAINMENT\\n 제조국 : 한국\\n 제조 연월 : 2020.02\\n 중량 : 12g ',\r\n        property: 'Accessory',\r\n    },\r\n    {\r\n        id: 19,\r\n        pName: 'TOWEL',\r\n        price: '11,900',\r\n        imgUrl: 'product_image/19.PNG',\r\n        detailImgUrl1: 'product_image/19-1.PNG',\r\n        detailImgUrl2: 'product_image/19-2.PNG',\r\n        detailImgUrl3: 'product_image/19-3.PNG',\r\n        des:\r\n            '- 상품 : 타올\\n - 소재 : COTTON\\n - 사이즈(CM) : 30x40x2\\n - 판매원 : SM BRAND MARKETING\\n - 제조국 : 한국\\n - 제조년월 : 2020.03',\r\n        property: 'Living',\r\n    },\r\n    {\r\n        id: 20,\r\n        pName: 'SUZY 2nd ALBUM',\r\n        price: '11,900',\r\n        imgUrl: 'product_image/20.jpg',\r\n        detailImgUrl1: 'product_image/20-1.jpg',\r\n        detailImgUrl2: 'product_image/20-2.jpg',\r\n        detailImgUrl3: 'product_image/20.-3jpg',\r\n        des:\r\n            '음반소개\\n 앨범 사양\\n 1. 앨범 1종\\n - 화보집 96P\\n -가사지8P\\n 2. [랜덤] 커버 엽서\\n - 4EA / 랜덤 1종 표지 노출\\n 3. [랜덤] 포토카드\\n - RANDOM 1 OUTOF 8\\n 4. CD-R\\n - CD-R1종 ',\r\n        property: 'Music',\r\n    },\r\n    {\r\n        id: 21,\r\n        pName: 'Bad But Good ALBUM',\r\n        price: '19,900',\r\n        imgUrl: 'product_image/21.png',\r\n        detailImgUrl1: 'product_image/21-1.jpg',\r\n        detailImgUrl2: 'product_image/21-2.jpg',\r\n        detailImgUrl3: 'product_image/21.-3jpg',\r\n        des:\r\n            '음반소개\\n 앨범 사양\\n 1. 앨범 1종\\n - 화보집 96P\\n -가사지8P\\n 2. [랜덤] 커버 엽서\\n - 4EA / 랜덤 1종 표지 노출\\n 3. [랜덤] 포토카드\\n - RANDOM 1 OUTOF 8\\n 4. CD-R\\n - CD-R1종 ',\r\n        property: 'Music',\r\n    },\r\n    {\r\n        id: 22,\r\n        pName: '2017 게스 화보집',\r\n        price: '15,900',\r\n        imgUrl: 'product_image/22.jpg',\r\n        detailImgUrl1: 'product_image/22-1.jpg',\r\n        detailImgUrl2: 'product_image/22-2.jpg',\r\n        detailImgUrl3: 'product_image/22.-3jpg',\r\n        des:\r\n            ' 하이웨이스트, 플레어 붓컷, 오버롤 팬츠 등 레트로 무드를 가장 드라마틱하게 연출해줄 데님 라인을 비롯해 오리지널스 로고가 적용된 맨투맨, 컬러 블록 아노락 점퍼 등 비비드한 컬러감의 상의류들까지 더해져 레트로 트렌드의 집합체라 해도 손색없을 정도로 완벽한 라인업을 선보인다.',\r\n        property: 'Photo',\r\n    },\r\n    {\r\n        id: 23,\r\n        pName: '마리끌레르 화보집',\r\n        price: '15,900',\r\n        imgUrl: 'product_image/23.jpg',\r\n        detailImgUrl1: 'product_image/23-1.jpg',\r\n        detailImgUrl2: 'product_image/23-2.jpg',\r\n        detailImgUrl3: 'product_image/23.-3jpg',\r\n        des:\r\n            ' 수지가 순정만화를 찢고 나온 듯한 여신 미모로 또 한번 독보적인 존재감을 드러냈다.\\n 글로벌 코스메틱 브랜드 랑콤의 뮤즈인 수지는 마리끌레르 3월호의 뷰티 화보를 장식하며 시크함과 우아함, 청순함까지 팔색조의 매력을 뽐냈다.\\n 공개된 화보에서 수지는 도도한 매력과 함께 차분하고 부드러운 핑크 무드로 우아하고 사랑스러운 매력을 뿜어낸다. 짙은 네이비 컬러의 의상에 차분한 톤다운 핑크컬러의 입술로 카메라를 그윽하게 응시하는 눈빛만으로 시크한 무드를 자아낸다.',\r\n        property: 'Photo',\r\n    },\r\n    {\r\n        id: 24,\r\n        pName: 'OFFICIAL FANLIGHT VER.2.0',\r\n        price: '36,000 ',\r\n        imgUrl: 'product_image/24.PNG',\r\n        detailImgUrl1: 'product_image/24-1.PNG',\r\n        detailImgUrl2: 'product_image/24-2.PNG',\r\n        detailImgUrl3: 'product_image/24-3.PNG',\r\n        des:\r\n            ' [상품정보]\\n - 상품 : SUZY OFFICIAL FANLIGHT VER.2.0\\n - 소재 : ABS, PC, 실리콘, 알루미늄\\n - 구성품 : 응원봉, 스트랩, 사용자설명서\\n - 사이즈 : 111.1 X 94 X 257.7 (mm)\\n - 무게 : 185.5 (g)\\n - 판매원 : SM BRAND MARKETING\\n - POWER : 알칼라인 AAA 건전지 3개\\n - 제조년월 : 2019.10\\n - KC 인증 : R-CMM-REI-SME-SJLS01',\r\n        property: 'Concert',\r\n    },\r\n    {\r\n        id: 25,\r\n        pName: 'Beyond LIVE T-SHIRT',\r\n        price: '35,000',\r\n        imgUrl: 'product_image/25.PNG',\r\n        detailImgUrl1: 'product_image/25-1.PNG',\r\n        detailImgUrl2: 'product_image/25-2.PNG',\r\n        detailImgUrl3: 'product_image/25-3.PNG',\r\n        des:\r\n            '[상품정보]\\n 상품 : 티셔츠 (1EA)\\n 소재 : COTTON\\n  사이즈 : 가슴둘레 112, 밑단둘레 112, 어깨너비 47, 소매기장 25, 총장 72.5 (CM)\\n  판매원 : SM ENTERTAINMENT\\n 제조국 : 한국\\n 제조 연월 : 2020.09\\n 중량 : 350g ',\r\n        property: 'Concert',\r\n    },\r\n    {\r\n        id: 26,\r\n        pName: 'Protectiong natural shine tone up sun cushion',\r\n        price: '46,000',\r\n        imgUrl: 'product_image/26.PNG',\r\n        detailImgUrl1: 'product_image/26-1.PNG',\r\n        detailImgUrl2: 'product_image/26-2.PNG',\r\n        detailImgUrl3: 'product_image/26-3.PNG',\r\n        des:\r\n            '- 사용기한: 제조일로부터 2년/ 개봉 후 6개월 내 사용\\n - 제품 사용 방법: 메이크업 전 후에 자외선 차단과 부 톤업이 필요한 경우 퍼프에 적당량 발라 두드려 펴 발라줍니다.\\n Tip 1. 선쿠션 사용 휴 레몬쿠션을 사용하시면 보다 좋은 커버력을 느끼실 수 있습니다. ',\r\n        property: 'Beauty',\r\n    },\r\n    {\r\n        id: 27,\r\n        pName: 'SUZY A SET',\r\n        price: '49,900',\r\n        imgUrl: 'product_image/27.PNG',\r\n        detailImgUrl1: 'product_image/27-1.PNG',\r\n        detailImgUrl2: 'product_image/27-2.PNG',\r\n        detailImgUrl3: 'product_image/27-3.PNG',\r\n        des:\r\n            '- 사용기한: 제조일로부터 2년/ 개봉 후 6개월 내 사용\\n - 제품 사용 방법: 메이크업 전 후에 자외선 차단과 부 톤업이 필요한 경우 퍼프에 적당량 발라 두드려 펴 발라줍니다.\\n Tip 1. 선쿠션 사용 휴 레몬쿠션을 사용하시면 보다 좋은 커버력을 느끼실 수 있습니다. ',\r\n        property: 'Beauty',\r\n    },\r\n    {\r\n        id: 28,\r\n        pName: 'SUZY B SET',\r\n        price: '49,900',\r\n        imgUrl: 'product_image/27.PNG',\r\n        detailImgUrl1: 'product_image/27-1.PNG',\r\n        detailImgUrl2: 'product_image/27-2.PNG',\r\n        detailImgUrl3: 'product_image/27-3.PNG',\r\n        des:\r\n            '[상품정보]\\n [안내사항]\\n * 본 상품의 구성은 랜덤으로 구매 후 단순 변심에 의한 교환 및 환불이 불가합니다.\\n [추가 안내사항]\\n * 본 제품은 사용연령 만 14세 이상 분들을 위한 제품으로 어린이용이 아니며, 용도 이외의 사용은 금합니다.\\n * 본 제품은 공정거래위원회 고시 소비자 분쟁해결 기준에 의거 교환 또는 보상 받을 수 있습니다.',\r\n        property: 'Beauty',\r\n    },\r\n];\r\n\r\nexport default Products;\r\n","import { observable, computed, action } from \"mobx\";\r\nimport Products from \"../Data/Products\";\r\nclass ProductStore {\r\n  @observable products = Products;\r\n  @observable selectProducts = Products;\r\n  @observable selectMenu = \"\";\r\n  @observable product = Products[0];\r\n  @observable open = false;\r\n  @observable list = [\r\n    \"Music\",\r\n    \"Photo\",\r\n    \"Concert\",\r\n    \"Living\",\r\n    \"Beauty\",\r\n    \"Accessory\",\r\n  ];\r\n\r\n  @computed get getProducts() {\r\n    return this.products;\r\n  }\r\n\r\n  @computed get getSelectProducts() {\r\n    return this.selectProducts;\r\n  }\r\n  @computed get getProduct() {\r\n    return this.product;\r\n  }\r\n  @computed get getOpen() {\r\n    return this.open;\r\n  }\r\n  @computed get getList() {\r\n    return this.list;\r\n  }\r\n\r\n  @action\r\n  setProduct(data) {\r\n    this.product = data;\r\n  }\r\n\r\n  @action\r\n  setOpen() {\r\n    this.open = true;\r\n  }\r\n\r\n  @action\r\n  setClose() {\r\n    this.open = false;\r\n  }\r\n\r\n  @action\r\n  updateProduct(price) {\r\n    let updatePrice = price;\r\n    this.product = { ...this.product, price: updatePrice };\r\n    this.selectProducts = this.products.map((product) =>\r\n      product.id === this.product.id\r\n        ? { ...product, price: updatePrice }\r\n        : product\r\n    );\r\n    this.products = this.selectProducts;\r\n    alert(\"수정됐습니다.\")\r\n  }\r\n\r\n  @action\r\n  deleteProduct() {\r\n    this.products = this.products.filter(\r\n      (product) => this.product.id !== product.id\r\n    );\r\n    this.selectProducts = this.selectProducts.filter(\r\n      (product) => this.product.id !== product.id\r\n    );\r\n    this.setClose();\r\n  }\r\n\r\n  @action\r\n  setSelectProducts(name) {\r\n    this.selectProducts = this.products.filter(\r\n      (product) => product.property === name\r\n    );\r\n    this.selectMenu = name;\r\n  }\r\n}\r\nexport default new ProductStore();\r\n","const Users = [\r\n  {\r\n    userId: \"admin\",\r\n    pasd: \"admin\",\r\n    name: \"admin\",\r\n    basket: [2, 4, 6, 9, 19],\r\n  },\r\n  {\r\n    userId: \"suzy2\",\r\n    pasd: \"222\",\r\n    name: \"lee\",\r\n    basket: [1, 7, 9],\r\n  },\r\n  {\r\n    userId: \"suzy3\",\r\n    pasd: \"333\",\r\n    name: \"park\",\r\n    basket: [27, 20, 9],\r\n  },\r\n  {\r\n    userId: \"suzy4\",\r\n    pasd: \"444\",\r\n    name: \"yoon\",\r\n    basket: [11, 10, 9],\r\n  },\r\n  {\r\n    userId: \"suzy5\",\r\n    pasd: \"555\",\r\n    name: \"choi\",\r\n    basket: [3, 2, 1],\r\n  },\r\n];\r\n\r\nexport default Users;\r\n","import { observable, computed, action } from \"mobx\";\r\nimport Users from \"../Data/Users\";\r\n// 1.Mobx store 클래스 선언\r\nclass UserStore {\r\n  @observable users = Users; //Users배열을 users로 받아옴\r\n  @observable user = {\r\n    //처음 사용자가 웹사이트 접속 시 비회원으로 접속\r\n    userId: \"guest\",\r\n  };\r\n\r\n  //2. 입력하는 Id와 pasd를 객체로 받아온다.\r\n  @observable\r\n  loginUser = {\r\n    userId: \"\",\r\n    pasd: \"\",\r\n    name: \"\",\r\n  }; //입력하는 아이디와 비밀번호를 객체로 받아옴\r\n\r\n  //5. 입력받은 값을 가져올 수 있는 객체 생성(SignUpContainer 돌고 옴)\r\n  @observable\r\n  signUpUser = {\r\n    userId: \"\",\r\n    pasd: \"\",\r\n    name: \"\",\r\n  }; //입력받을 값을 받아오는 객체\r\n\r\n  @computed\r\n  get getUser() {\r\n    //해당 객체 가져오기\r\n    return this.user ? { ...this.user } : {};\r\n  }\r\n\r\n  @computed\r\n  get getUsers() {\r\n    //전체 배열 가져오기\r\n    return this.users ? { ...this.users } : [];\r\n  }\r\n\r\n  //3. Users 안의 속성을 key라고 한다.\r\n  // 입력받은 key가 UserId 이면 UserId에 넣는다.\r\n  @action\r\n  setLgnProp(key, value) {\r\n    //key가 아이디일때 value를 입력한 값으로 아이디 설정, 패스워드도 마찬가지\r\n    this.loginUser = {\r\n      ...this.loginUser,\r\n      [key]: value,\r\n    };\r\n  }\r\n\r\n  @action\r\n  setGuest() {\r\n    this.user = {\r\n      userId: \"guest\",\r\n    };\r\n  }\r\n\r\n  //6.\r\n  @action\r\n  setSignUpProp(name, value) {\r\n    this.signUpUser = {\r\n      ...this.signUpUser,\r\n      [name]: value,\r\n    };\r\n  }\r\n\r\n  //4.로그인 성공 및 로그인 버튼을 눌렀을 때 HOME으로 가기 위한 조건 설정\r\n  //기능1. 로그인 버튼 클릭 이벤트 설정\r\n  //버튼을 눌렀을때 로그인 성공과 홈으로 가기위한 조건\r\n  @action\r\n  login() {\r\n    //이미 존재하는 userId값과 입력받은 값이 일치하면 && pasd값이 일치하면->alert\r\n    if (\r\n      //기존 존재하는 아이디와 비번과 입력한 아이디와 비번이 같다면\r\n      this.users.find((user) => user.userId === this.loginUser.userId) &&\r\n      this.users.find((user) => user.pasd === this.loginUser.pasd)\r\n    ) {\r\n      console.log(this.user);\r\n      console.log(this.users);\r\n      alert(\"로그인 성공!\");\r\n      //세션유지?\r\n      this.user = this.users.find(\r\n        (user) => user.userId === this.loginUser.userId\r\n      );\r\n\r\n      //리턴값을 true로 설정함으로써 값이 정상적으로 대입됬다는 것을 알 수 있음\r\n      return true;\r\n    } else {\r\n      //로그인 에러\r\n      alert(\"아이디 또는 비밀번호가 일치하지 않습니다. 다시 시도해 주세요.\");\r\n      return false;\r\n    }\r\n  }\r\n\r\n  @action\r\n  setBasket(product) {\r\n    this.user.basket = this.user.basket.concat(product.id);\r\n  }\r\n\r\n  @action\r\n  clearBasket() {\r\n    this.user.basket = [];\r\n  }\r\n\r\n  //7. 회원가입 받아온 값 3개의 속성과, basket의 속성을 tempUser안에 저장한다.\r\n  @action\r\n  addSignUp() {\r\n    //singUpUser의 속성 3개와 마지막 속성 basket을 tempUser에 저장, tempUser를 배열에 추가\r\n    let tempUser = { ...this.signUpUser, basket: [] };\r\n    if (\r\n      this.signUpUser.userId === \"\" ||\r\n      this.signUpUser.pasd === \"\" ||\r\n      this.signUpUser.name === \"\"\r\n    ) {\r\n      alert(\"빈칸 없이 모두 채워주세요.\");\r\n      return false;\r\n    } else {\r\n      this.users = this.users.concat(tempUser); //tempUser를 users 배열 뒤에 붙여준다. (concat의 역할)\r\n      console.log(this.users);\r\n      this.signUpUser = {\r\n        userId: \"\",\r\n        pasd: \"\",\r\n        name: \"\",\r\n      }; //회원가입을 눌렀을 때 초기화\r\n      return true; //SignUpContainer.js의 3번 if문을 돌렸을 때 true가 필요해서 true를 이도록 설정.\r\n    }\r\n  }\r\n}\r\n\r\n//객체를 생성해서 export\r\nexport default new UserStore();\r\n","//페이지 변화에 따른 값을 조정하는 Store\r\n\r\nimport { observable, computed, action } from \"mobx\";\r\n\r\nclass MainStore {\r\n  //기본 페이지를 Home으로 설정\r\n  @observable mainView = \"Home\";\r\n\r\n  @computed get getMainView() {\r\n    return this.mainView;\r\n  }\r\n\r\n  //페이지 변화를 위한 설정 함수\r\n  @action setMainView(mainView) {\r\n    this.mainView = mainView;\r\n  }\r\n}\r\nexport default new MainStore();\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'mobx-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport ProductStore from './Product/Store/ProductStore';\r\nimport UserStore from './User/Store/UserStore';\r\nimport MainStore from './MainPage/MainStore';\r\n\r\nReactDOM.render(\r\n    <Provider MainStore={MainStore} ProductStore={ProductStore} UserStore={UserStore}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}